# Generated by Django 3.2.16 on 2023-01-03 23:59

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('category', '0001_initial'),
        ('shipping', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('hex', models.CharField(max_length=255)),
                ('author', models.UUIDField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Details',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('body', models.CharField(max_length=1200)),
                ('author', models.UUIDField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.ImageField(upload_to='marketplace/products')),
                ('author', models.UUIDField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('author', models.UUIDField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=60, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('short_description', models.TextField(blank=True, max_length=125, null=True)),
                ('keywords', models.CharField(blank=True, max_length=255, null=True)),
                ('slug', models.SlugField(default=uuid.uuid4, unique=True)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('discount_until', models.DateTimeField(blank=True, null=True)),
                ('discount', models.BooleanField(default=False)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('compare_price', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('quantity', models.IntegerField(default=0)),
                ('rating_no', models.IntegerField(blank=True, default=0, null=True)),
                ('best_seller', models.BooleanField(default=False)),
                ('sold', models.IntegerField(default=0)),
                ('income_earned', models.PositiveIntegerField(blank=True, default=0)),
                ('views', models.IntegerField(blank=True, default=0)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published')], default='draft', max_length=10)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='category.category')),
                ('colors', models.ManyToManyField(to='product.Color')),
                ('details', models.ManyToManyField(to='product.Details')),
                ('images', models.ManyToManyField(blank=True, related_name='product_images', to='product.Image')),
            ],
            options={
                'ordering': ('date_created',),
            },
        ),
        migrations.CreateModel(
            name='Rate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate_number', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('user', models.UUIDField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('inStock', models.BooleanField(default=True)),
                ('author', models.UUIDField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ViewCount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.CharField(max_length=255)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_view_count', to='product.product')),
            ],
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='marketplace/products')),
                ('author', models.UUIDField(blank=True, null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_video_attached', to='product.product')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='rating',
            field=models.ManyToManyField(blank=True, to='product.Rate'),
        ),
        migrations.AddField(
            model_name='product',
            name='shipping',
            field=models.ManyToManyField(blank=True, to='shipping.Shipping'),
        ),
        migrations.AddField(
            model_name='product',
            name='sizes',
            field=models.ManyToManyField(to='product.Size'),
        ),
        migrations.AddField(
            model_name='product',
            name='videos',
            field=models.ManyToManyField(blank=True, related_name='product_videos', to='product.Video'),
        ),
        migrations.AddField(
            model_name='image',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_image_attached', to='product.product'),
        ),
    ]
